// <auto-generated />
using System;
using Controle.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Controle.Infrastructure.Migrations
{
    [DbContext(typeof(ControleContext))]
    [Migration("20231210221547_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Controle.Domain.Entities.FixedExpenses", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NameExpenses")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NameExpenses");

                    b.Property<decimal>("ValueExpenses")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ValueExpenses");

                    b.HasKey("Id");

                    b.ToTable("FixedExpenses", (string)null);
                });

            modelBuilder.Entity("Controle.Domain.Entities.Investments", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("InstitutionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("InstitutionName");

                    b.Property<string>("InvestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("InvestName");

                    b.Property<decimal>("InvestValue")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("InvestValue");

                    b.HasKey("Id");

                    b.ToTable("Investments", (string)null);
                });

            modelBuilder.Entity("Controle.Domain.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int")
                        .HasColumnName("Age");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2")
                        .HasColumnName("BirthDay");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.Property<Guid>("SalaryId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Salary");

                    b.HasKey("Id");

                    b.HasIndex("SalaryId");

                    b.ToTable("People", (string)null);
                });

            modelBuilder.Entity("Controle.Domain.Entities.Salary", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SavePorcentage")
                        .HasColumnType("int")
                        .HasColumnName("SavePorcentage");

                    b.Property<decimal>("ValueSalary")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("ValueSalary");

                    b.HasKey("Id");

                    b.ToTable("Salaries", (string)null);
                });

            modelBuilder.Entity("Controle.Domain.Entities.Person", b =>
                {
                    b.HasOne("Controle.Domain.Entities.Salary", "Salary")
                        .WithMany()
                        .HasForeignKey("SalaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salary");
                });
#pragma warning restore 612, 618
        }
    }
}
